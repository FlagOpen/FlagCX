// include XPU-related headers
#include "flagcx.h"

__global__ void asyncStore(bool* __restrict__ value) {
  *value = 1; // set value to true
}

__global__ void asyncLoad(const volatile bool* __restrict__ value) {
  while (!(*value)) {} // no-op 
}

extern "C" void deviceAsyncStore(flagcxStream_t stream, void *args) {
    bool* value = static_cast<bool*>(args);
    asyncStore<<<1, 1, *(XPUStream*)stream>>>(value);
    return;
}

extern "C" void deviceAsyncLoad(flagcxStream_t stream, void *args) {
    bool* value = static_cast<bool*>(args);
    asyncLoad<<<1, 1, *(XPUStream*)stream>>>(value);
    return;
}