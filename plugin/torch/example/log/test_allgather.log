NCCL debug information disabled.
torchrun --nproc_per_node 8 --nnodes=1 --node_rank=0 --master_addr="localhost" --master_port=8281 example.py
ddp backend config is cpu:gloo,npu:flagcxddp backend config is cpu:gloo,npu:flagcxddp backend config is cpu:gloo,npu:flagcx

ddp backend config is cpu:gloo,npu:flagcxddp backend config is cpu:gloo,npu:flagcx


ddp backend config is cpu:gloo,npu:flagcx
ddp backend config is cpu:gloo,npu:flagcx
ddp backend config is cpu:gloo,npu:flagcx
ranks_flagcx: [0, 1, 2, 3, 4, 5, 6, 7]
rank: 5, world_size = 8, prev_rank: 4, next_rank: 6
ranks_flagcx: [0, 1, 2, 3, 4, 5, 6, 7]
rank: 0, world_size = 8, prev_rank: 7, next_rank: 1
ranks_flagcx: [0, 1, 2, 3, 4, 5, 6, 7]
rank: 1, world_size = 8, prev_rank: 0, next_rank: 2
ranks_flagcx: [0, 1, 2, 3, 4, 5, 6, 7]
rank: 2, world_size = 8, prev_rank: 1, next_rank: 3
ranks_flagcx: [0, 1, 2, 3, 4, 5, 6, 7]
rank: 3, world_size = 8, prev_rank: 2, next_rank: 4
ranks_flagcx: [0, 1, 2, 3, 4, 5, 6, 7]
rank: 4, world_size = 8, prev_rank: 3, next_rank: 5
ranks_flagcx: [0, 1, 2, 3, 4, 5, 6, 7]
rank: 7, world_size = 8, prev_rank: 6, next_rank: 0
ranks_flagcx: [0, 1, 2, 3, 4, 5, 6, 7]
rank: 6, world_size = 8, prev_rank: 5, next_rank: 7
rank 6 before _all_gather_base with FLAGCX_GROUP1: z = tensor([6.], device='npu:6'), y = tensor([0.5499, 0.5659, 0.3633, 0.1158, 0.9255, 0.1025, 0.7356, 0.0147],
       device='npu:6')
p-perf-huawei-06:3951801:3951801 [0] FLAGCX INFO Bootstrap : Using enp196s0f0:10.1.15.130<0>
rank 1 before _all_gather_base with FLAGCX_GROUP1: z = tensor([1.], device='npu:1'), y = tensor([0.6035, 0.9149, 0.0234, 0.7809, 0.6434, 0.4313, 0.8532, 0.7208],
       device='npu:1')
p-perf-huawei-06:3951796:3951796 [0] FLAGCX INFO Bootstrap : Using enp196s0f0:10.1.15.130<0>
rank 4 before _all_gather_base with FLAGCX_GROUP1: z = tensor([4.], device='npu:4'), y = tensor([0.7800, 0.8123, 0.8505, 0.1346, 0.9252, 0.4605, 0.3512, 0.2764],
       device='npu:4')
p-perf-huawei-06:3951799:3951799 [0] FLAGCX INFO Bootstrap : Using enp196s0f0:10.1.15.130<0>
rank 0 before _all_gather_base with FLAGCX_GROUP1: z = tensor([0.], device='npu:0'), y = tensor([0.1565, 0.7755, 0.1596, 0.3904, 0.1607, 0.0635, 0.6214, 0.6457],
       device='npu:0')
p-perf-huawei-06:3951795:3951795 [0] FLAGCX INFO Bootstrap : Using enp196s0f0:10.1.15.130<0>
p-perf-huawei-06:3951795:3953212 [0] FLAGCX INFO Bootstrap Root : rank 0 of 8 ranks checked in
p-perf-huawei-06:3951795:3953212 [0] FLAGCX INFO Bootstrap Root : rank 6 of 8 ranks checked in
p-perf-huawei-06:3951795:3953212 [0] FLAGCX INFO Bootstrap Root : rank 1 of 8 ranks checked in
p-perf-huawei-06:3951795:3953212 [0] FLAGCX INFO Bootstrap Root : rank 4 of 8 ranks checked in
rank 7 before _all_gather_base with FLAGCX_GROUP1: z = tensor([7.], device='npu:7'), y = tensor([0.4545, 0.2448, 0.4909, 0.9150, 0.0890, 0.4484, 0.6217, 0.2487],
       device='npu:7')
p-perf-huawei-06:3951802:3951802 [0] FLAGCX INFO Bootstrap : Using enp196s0f0:10.1.15.130<0>
p-perf-huawei-06:3951795:3953212 [0] FLAGCX INFO Bootstrap Root : rank 7 of 8 ranks checked in
rank 5 before _all_gather_base with FLAGCX_GROUP1: z = tensor([5.], device='npu:5'), y = tensor([0.0405, 0.1830, 0.4229, 0.7099, 0.5461, 0.3279, 0.5945, 0.9960],
       device='npu:5')
p-perf-huawei-06:3951800:3951800 [0] FLAGCX INFO Bootstrap : Using enp196s0f0:10.1.15.130<0>
p-perf-huawei-06:3951795:3953212 [0] FLAGCX INFO Bootstrap Root : rank 5 of 8 ranks checked in
rank 2 before _all_gather_base with FLAGCX_GROUP1: z = tensor([2.], device='npu:2'), y = tensor([0.1140, 0.0628, 0.5543, 0.6699, 0.9160, 0.0543, 0.2615, 0.8486],
       device='npu:2')
p-perf-huawei-06:3951797:3951797 [0] FLAGCX INFO Bootstrap : Using enp196s0f0:10.1.15.130<0>
p-perf-huawei-06:3951795:3953212 [0] FLAGCX INFO Bootstrap Root : rank 2 of 8 ranks checked in
rank 3 before _all_gather_base with FLAGCX_GROUP1: z = tensor([3.], device='npu:3'), y = tensor([0.7664, 0.4219, 0.2239, 0.6798, 0.1425, 0.2863, 0.5185, 0.9363],
       device='npu:3')
p-perf-huawei-06:3951798:3951798 [0] FLAGCX INFO Bootstrap : Using enp196s0f0:10.1.15.130<0>
p-perf-huawei-06:3951795:3953212 [0] FLAGCX INFO Bootstrap Root : rank 3 of 8 ranks checked in
p-perf-huawei-06:3951795:3953212 [0] FLAGCX INFO SENT OUT ALL 8 HANDLES
p-perf-huawei-06:3951795:3951795 [0] FLAGCX INFO rank 0 nranks 8 - DONE
p-perf-huawei-06:3951802:3951802 [0] FLAGCX INFO rank 7 nranks 8 - DONE
p-perf-huawei-06:3951801:3951801 [0] FLAGCX INFO rank 6 nranks 8 - DONE
p-perf-huawei-06:3951796:3951796 [0] FLAGCX INFO rank 1 nranks 8 - DONE
p-perf-huawei-06:3951797:3951797 [0] FLAGCX INFO rank 2 nranks 8 - DONE
p-perf-huawei-06:3951799:3951799 [0] FLAGCX INFO rank 4 nranks 8 - DONE
p-perf-huawei-06:3951798:3951798 [0] FLAGCX INFO rank 3 nranks 8 - DONE
p-perf-huawei-06:3951800:3951800 [0] FLAGCX INFO rank 5 nranks 8 - DONE
p-perf-huawei-06:3951795:3951795 [0] FLAGCX INFO rank = 0, nranks = 8, nclusters = 1, cluster_id = 0, cluster_size = 8, cluster_inter_rank = -1, homo_rank = 0, homo_root_rank = 0, homo_inter_rank = -1, homo_ranks = 8, has_single_rank_homo_comm = 0, 
p-perf-huawei-06:3951797:3951797 [0] FLAGCX INFO rank = 2, nranks = 8, nclusters = 1, cluster_id = 0, cluster_size = 8, cluster_inter_rank = -1, homo_rank = 2, homo_root_rank = 0, homo_inter_rank = -1, homo_ranks = 8, has_single_rank_homo_comm = 0, 
p-perf-huawei-06:3951800:3951800 [0] FLAGCX INFO rank = 5, nranks = 8, nclusters = 1, cluster_id = 0, cluster_size = 8, cluster_inter_rank = -1, homo_rank = 5, homo_root_rank = 0, homo_inter_rank = -1, homo_ranks = 8, has_single_rank_homo_comm = 0, 
p-perf-huawei-06:3951796:3951796 [0] FLAGCX INFO rank = 1, nranks = 8, nclusters = 1, cluster_id = 0, cluster_size = 8, cluster_inter_rank = -1, homo_rank = 1, homo_root_rank = 0, homo_inter_rank = -1, homo_ranks = 8, has_single_rank_homo_comm = 0, 
p-perf-huawei-06:3951799:3951799 [0] FLAGCX INFO rank = 4, nranks = 8, nclusters = 1, cluster_id = 0, cluster_size = 8, cluster_inter_rank = -1, homo_rank = 4, homo_root_rank = 0, homo_inter_rank = -1, homo_ranks = 8, has_single_rank_homo_comm = 0, 
p-perf-huawei-06:3951798:3951798 [0] FLAGCX INFO rank = 3, nranks = 8, nclusters = 1, cluster_id = 0, cluster_size = 8, cluster_inter_rank = -1, homo_rank = 3, homo_root_rank = 0, homo_inter_rank = -1, homo_ranks = 8, has_single_rank_homo_comm = 0, 
p-perf-huawei-06:3951802:3951802 [0] FLAGCX INFO rank = 7, nranks = 8, nclusters = 1, cluster_id = 0, cluster_size = 8, cluster_inter_rank = -1, homo_rank = 7, homo_root_rank = 0, homo_inter_rank = -1, homo_ranks = 8, has_single_rank_homo_comm = 0, 
p-perf-huawei-06:3951801:3951801 [0] FLAGCX INFO rank = 6, nranks = 8, nclusters = 1, cluster_id = 0, cluster_size = 8, cluster_inter_rank = -1, homo_rank = 6, homo_root_rank = 0, homo_inter_rank = -1, homo_ranks = 8, has_single_rank_homo_comm = 0, 
rank 2 after _all_gather_base with FLAGCX_GROUP1: z = tensor([2.], device='npu:2'), y = tensor([0.1140, 0.0628, 0.5543, 0.6699, 0.9160, 0.0543, 0.2615, 0.8486],
       device='npu:2')
rank 6 after _all_gather_base with FLAGCX_GROUP1: z = tensor([6.], device='npu:6'), y = tensor([0.5499, 0.5659, 0.3633, 0.1158, 0.9255, 0.1025, 0.7356, 0.0147],
       device='npu:6')
rank 1 after _all_gather_base with FLAGCX_GROUP1: z = tensor([1.], device='npu:1'), y = tensor([0.6035, 0.9149, 0.0234, 0.7809, 0.6434, 0.4313, 0.8532, 0.7208],
       device='npu:1')
rank 5 after _all_gather_base with FLAGCX_GROUP1: z = tensor([5.], device='npu:5'), y = tensor([0.0405, 0.1830, 0.4229, 0.7099, 0.5461, 0.3279, 0.5945, 0.9960],
       device='npu:5')
rank 2 before all_gather with FLAGCX_GROUP1: z = tensor([2.], device='npu:2'), z_list = [tensor([0.4360], device='npu:2'), tensor([0.4769], device='npu:2'), tensor([0.4277], device='npu:2'), tensor([0.3174], device='npu:2'), tensor([0.4042], device='npu:2'), tensor([0.6520], device='npu:2'), tensor([0.4545], device='npu:2'), tensor([0.8405], device='npu:2')]
rank 6 before all_gather with FLAGCX_GROUP1: z = tensor([6.], device='npu:6'), z_list = [tensor([0.6564], device='npu:6'), tensor([0.1376], device='npu:6'), tensor([0.2830], device='npu:6'), tensor([0.5829], device='npu:6'), tensor([0.4284], device='npu:6'), tensor([0.1195], device='npu:6'), tensor([0.2057], device='npu:6'), tensor([0.2629], device='npu:6')]
rank 1 before all_gather with FLAGCX_GROUP1: z = tensor([1.], device='npu:1'), z_list = [tensor([0.8319], device='npu:1'), tensor([0.9501], device='npu:1'), tensor([0.2633], device='npu:1'), tensor([0.4254], device='npu:1'), tensor([0.2812], device='npu:1'), tensor([0.6329], device='npu:1'), tensor([0.0508], device='npu:1'), tensor([0.9236], device='npu:1')]
rank 5 before all_gather with FLAGCX_GROUP1: z = tensor([5.], device='npu:5'), z_list = [tensor([0.8359], device='npu:5'), tensor([0.0060], device='npu:5'), tensor([0.7322], device='npu:5'), tensor([0.8433], device='npu:5'), tensor([0.5222], device='npu:5'), tensor([0.1234], device='npu:5'), tensor([0.4074], device='npu:5'), tensor([0.0364], device='npu:5')]
rank 2 after all_gather with FLAGCX_GROUP1: z = tensor([2.], device='npu:2'), z_list = [tensor([0.8405], device='npu:2'), tensor([0.0628], device='npu:2'), tensor([0.5543], device='npu:2'), tensor([0.6699], device='npu:2'), tensor([0.9160], device='npu:2'), tensor([0.0543], device='npu:2'), tensor([0.2615], device='npu:2'), tensor([0.8486], device='npu:2')]
rank 6 after all_gather with FLAGCX_GROUP1: z = tensor([6.], device='npu:6'), z_list = [tensor([0.2629], device='npu:6'), tensor([0.5659], device='npu:6'), tensor([0.3633], device='npu:6'), tensor([0.1158], device='npu:6'), tensor([0.9255], device='npu:6'), tensor([0.1025], device='npu:6'), tensor([0.7356], device='npu:6'), tensor([0.0147], device='npu:6')]
rank 1 after all_gather with FLAGCX_GROUP1: z = tensor([1.], device='npu:1'), z_list = [tensor([0.9236], device='npu:1'), tensor([0.9149], device='npu:1'), tensor([0.0234], device='npu:1'), tensor([0.7809], device='npu:1'), tensor([0.6434], device='npu:1'), tensor([0.4313], device='npu:1'), tensor([0.8532], device='npu:1'), tensor([0.7208], device='npu:1')]
rank 5 after all_gather with FLAGCX_GROUP1: z = tensor([5.], device='npu:5'), z_list = [tensor([0.0364], device='npu:5'), tensor([0.1830], device='npu:5'), tensor([0.4229], device='npu:5'), tensor([0.7099], device='npu:5'), tensor([0.5461], device='npu:5'), tensor([0.3279], device='npu:5'), tensor([0.5945], device='npu:5'), tensor([0.9960], device='npu:5')]
rank 7 after _all_gather_base with FLAGCX_GROUP1: z = tensor([7.], device='npu:7'), y = tensor([0.4545, 0.2448, 0.4909, 0.9150, 0.0890, 0.4484, 0.6217, 0.2487],
       device='npu:7')
rank 3 after _all_gather_base with FLAGCX_GROUP1: z = tensor([3.], device='npu:3'), y = tensor([0.7664, 0.4219, 0.2239, 0.6798, 0.1425, 0.2863, 0.5185, 0.9363],
       device='npu:3')
rank 0 after _all_gather_base with FLAGCX_GROUP1: z = tensor([0.], device='npu:0'), y = tensor([0.1565, 0.7755, 0.1596, 0.3904, 0.1607, 0.0635, 0.6214, 0.6457],
       device='npu:0')
rank 7 before all_gather with FLAGCX_GROUP1: z = tensor([7.], device='npu:7'), z_list = [tensor([0.6143], device='npu:7'), tensor([0.7151], device='npu:7'), tensor([0.3153], device='npu:7'), tensor([0.8307], device='npu:7'), tensor([0.1716], device='npu:7'), tensor([0.5271], device='npu:7'), tensor([0.5657], device='npu:7'), tensor([0.3433], device='npu:7')]
rank 3 before all_gather with FLAGCX_GROUP1: z = tensor([3.], device='npu:3'), z_list = [tensor([0.3314], device='npu:3'), tensor([0.7071], device='npu:3'), tensor([0.6223], device='npu:3'), tensor([0.1431], device='npu:3'), tensor([0.7362], device='npu:3'), tensor([0.7795], device='npu:3'), tensor([0.3510], device='npu:3'), tensor([0.8556], device='npu:3')]
rank 0 before all_gather with FLAGCX_GROUP1: z = tensor([0.], device='npu:0'), z_list = [tensor([0.5155], device='npu:0'), tensor([0.2375], device='npu:0'), tensor([0.6349], device='npu:0'), tensor([0.1587], device='npu:0'), tensor([0.4764], device='npu:0'), tensor([0.9235], device='npu:0'), tensor([0.1472], device='npu:0'), tensor([0.2578], device='npu:0')]
rank 4 after _all_gather_base with FLAGCX_GROUP1: z = tensor([4.], device='npu:4'), y = tensor([0., 1., 2., 3., 4., 5., 6., 7.], device='npu:4')
rank 3 after all_gather with FLAGCX_GROUP1: z = tensor([3.], device='npu:3'), z_list = [tensor([0.8556], device='npu:3'), tensor([0.4219], device='npu:3'), tensor([0.2239], device='npu:3'), tensor([0.6798], device='npu:3'), tensor([0.1425], device='npu:3'), tensor([0.2863], device='npu:3'), tensor([0.5185], device='npu:3'), tensor([0.9363], device='npu:3')]
rank 7 after all_gather with FLAGCX_GROUP1: z = tensor([7.], device='npu:7'), z_list = [tensor([0.3433], device='npu:7'), tensor([0.2448], device='npu:7'), tensor([0.4909], device='npu:7'), tensor([0.9150], device='npu:7'), tensor([0.0890], device='npu:7'), tensor([0.4484], device='npu:7'), tensor([0.6217], device='npu:7'), tensor([0.2487], device='npu:7')]
rank 0 after all_gather with FLAGCX_GROUP1: z = tensor([0.], device='npu:0'), z_list = [tensor([0.2578], device='npu:0'), tensor([0.7755], device='npu:0'), tensor([0.1596], device='npu:0'), tensor([0.3904], device='npu:0'), tensor([0.1607], device='npu:0'), tensor([0.0635], device='npu:0'), tensor([0.6214], device='npu:0'), tensor([0.6457], device='npu:0')]
rank 4 before all_gather with FLAGCX_GROUP1: z = tensor([4.], device='npu:4'), z_list = [tensor([0.1944], device='npu:4'), tensor([0.0523], device='npu:4'), tensor([0.5813], device='npu:4'), tensor([0.0414], device='npu:4'), tensor([0.7849], device='npu:4'), tensor([0.2250], device='npu:4'), tensor([0.1174], device='npu:4'), tensor([0.3771], device='npu:4')]
rank 4 after all_gather with FLAGCX_GROUP1: z = tensor([4.], device='npu:4'), z_list = [tensor([0.3771], device='npu:4'), tensor([2.], device='npu:4'), tensor([2.], device='npu:4'), tensor([3.], device='npu:4'), tensor([4.], device='npu:4'), tensor([5.], device='npu:4'), tensor([6.], device='npu:4'), tensor([7.], device='npu:4')]
rank 4 after all_gather_object with FLAGCX_GROUP1: all_rank_infos = [[0, 1], [1, 2], [2, 3], [3, 4], [4, 5], [5, 6], [6, 7], [7, 8]]
rank 6 after all_gather_object with FLAGCX_GROUP1: all_rank_infos = [[0, 1], [1, 2], [2, 3], [3, 4], [4, 5], [5, 6], [6, 7], [7, 8]]
rank 3 after all_gather_object with FLAGCX_GROUP1: all_rank_infos = [[0, 1], [1, 2], [2, 3], [3, 4], [4, 5], [5, 6], [6, 7], [7, 8]]
rank 5 after all_gather_object with FLAGCX_GROUP1: all_rank_infos = [[0, 1], [1, 2], [2, 3], [3, 4], [4, 5], [5, 6], [6, 7], [7, 8]]
rank 2 after all_gather_object with FLAGCX_GROUP1: all_rank_infos = [[0, 1], [1, 2], [2, 3], [3, 4], [4, 5], [5, 6], [6, 7], [7, 8]]
rank 0 after all_gather_object with FLAGCX_GROUP1: all_rank_infos = [[0, 1], [1, 2], [2, 3], [3, 4], [4, 5], [5, 6], [6, 7], [7, 8]]
rank 7 after all_gather_object with FLAGCX_GROUP1: all_rank_infos = [[0, 1], [1, 2], [2, 3], [3, 4], [4, 5], [5, 6], [6, 7], [7, 8]]
rank 1 after all_gather_object with FLAGCX_GROUP1: all_rank_infos = [[0, 1], [1, 2], [2, 3], [3, 4], [4, 5], [5, 6], [6, 7], [7, 8]]
rank 4 before all_gather_coalesced sync with FLAGCX_GROUP1: x = tensor([0.3771, 2.0000, 2.0000, 3.0000, 4.0000, 5.0000, 6.0000, 7.0000],
       device='npu:4'), y = tensor([0., 1., 2., 3., 4., 5., 6., 7.], device='npu:4'), z = tensor([4.], device='npu:4'), z1 = tensor([40.], device='npu:4')
rank 0 before all_gather_coalesced sync with FLAGCX_GROUP1: x = tensor([0.2578, 0.7755, 0.1596, 0.3904, 0.1607, 0.0635, 0.6214, 0.6457],
       device='npu:0'), y = tensor([0., 1., 2., 3., 4., 5., 6., 7.], device='npu:0'), z = tensor([0.], device='npu:0'), z1 = tensor([0.], device='npu:0')
rank 5 before all_gather_coalesced sync with FLAGCX_GROUP1: x = tensor([0.0364, 0.1830, 0.4229, 0.7099, 0.5461, 0.3279, 0.5945, 0.9960],
       device='npu:5'), y = tensor([0., 1., 2., 3., 4., 5., 6., 7.], device='npu:5'), z = tensor([5.], device='npu:5'), z1 = tensor([50.], device='npu:5')
rank 6 before all_gather_coalesced sync with FLAGCX_GROUP1: x = tensor([0.2629, 0.5659, 0.3633, 0.1158, 0.9255, 0.1025, 0.7356, 0.0147],
       device='npu:6'), y = tensor([0., 1., 2., 3., 4., 5., 6., 7.], device='npu:6'), z = tensor([6.], device='npu:6'), z1 = tensor([60.], device='npu:6')rank 7 before all_gather_coalesced sync with FLAGCX_GROUP1: x = tensor([0.3433, 0.2448, 0.4909, 0.9150, 0.0890, 0.4484, 0.6217, 0.2487],
       device='npu:7'), y = tensor([0., 1., 2., 3., 4., 5., 6., 7.], device='npu:7'), z = tensor([7.], device='npu:7'), z1 = tensor([70.], device='npu:7')rank 3 before all_gather_coalesced sync with FLAGCX_GROUP1: x = tensor([0.8556, 0.4219, 0.2239, 0.6798, 0.1425, 0.2863, 0.5185, 0.9363],
       device='npu:3'), y = tensor([0., 1., 2., 3., 4., 5., 6., 7.], device='npu:3'), z = tensor([3.], device='npu:3'), z1 = tensor([30.], device='npu:3')


rank 1 before all_gather_coalesced sync with FLAGCX_GROUP1: x = tensor([0.9236, 0.9149, 0.0234, 0.7809, 0.6434, 0.4313, 0.8532, 0.7208],
       device='npu:1'), y = tensor([0., 1., 2., 3., 4., 5., 6., 7.], device='npu:1'), z = tensor([1.], device='npu:1'), z1 = tensor([10.], device='npu:1')
rank 2 before all_gather_coalesced sync with FLAGCX_GROUP1: x = tensor([0.8405, 0.0628, 0.5543, 0.6699, 0.9160, 0.0543, 0.2615, 0.8486],
       device='npu:2'), y = tensor([0., 1., 2., 3., 4., 5., 6., 7.], device='npu:2'), z = tensor([2.], device='npu:2'), z1 = tensor([20.], device='npu:2')
[ERROR] 2025-07-08-11:32:09 (PID:3951727, Device:-1, RankID:-1) ERR99999 UNKNOWN applicaiton exception
