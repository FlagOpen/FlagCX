NCCL debug information disabled.
torchrun --nproc_per_node 8 --nnodes=1 --node_rank=0 --master_addr="localhost" --master_port=8281 example.py
ddp backend config is cpu:gloo,npu:flagcx
ddp backend config is cpu:gloo,npu:flagcx
ddp backend config is cpu:gloo,npu:flagcx
ddp backend config is cpu:gloo,npu:flagcx
ddp backend config is cpu:gloo,npu:flagcx
ddp backend config is cpu:gloo,npu:flagcx
ddp backend config is cpu:gloo,npu:flagcx
ddp backend config is cpu:gloo,npu:flagcx
ranks_flagcx: [0, 1, 2, 3, 4, 5, 6, 7]
rank: 0, world_size = 8, prev_rank: 7, next_rank: 1
ranks_flagcx: [0, 1, 2, 3, 4, 5, 6, 7]
rank: 1, world_size = 8, prev_rank: 0, next_rank: 2
ranks_flagcx: [0, 1, 2, 3, 4, 5, 6, 7]
rank: 2, world_size = 8, prev_rank: 1, next_rank: 3
ranks_flagcx: [0, 1, 2, 3, 4, 5, 6, 7]
rank: 5, world_size = 8, prev_rank: 4, next_rank: 6
ranks_flagcx: [0, 1, 2, 3, 4, 5, 6, 7]
rank: 3, world_size = 8, prev_rank: 2, next_rank: 4
ranks_flagcx: [0, 1, 2, 3, 4, 5, 6, 7]
rank: 4, world_size = 8, prev_rank: 3, next_rank: 5
ranks_flagcx: [0, 1, 2, 3, 4, 5, 6, 7]
rank: 6, world_size = 8, prev_rank: 5, next_rank: 7
ranks_flagcx: [0, 1, 2, 3, 4, 5, 6, 7]
rank: 7, world_size = 8, prev_rank: 6, next_rank: 0
rank 4 before reduce_scatter with FLAGCX_GROUP1: x_list = [tensor([0.], device='npu:4'), tensor([1.], device='npu:4'), tensor([2.], device='npu:4'), tensor([3.], device='npu:4'), tensor([4.], device='npu:4'), tensor([5.], device='npu:4'), tensor([6.], device='npu:4'), tensor([7.], device='npu:4')], z = tensor([0.], device='npu:4')
p-perf-huawei-06:3954287:3954287 [0] FLAGCX INFO Bootstrap : Using enp196s0f0:10.1.15.130<0>
rank 7 before reduce_scatter with FLAGCX_GROUP1: x_list = [tensor([0.], device='npu:7'), tensor([1.], device='npu:7'), tensor([2.], device='npu:7'), tensor([3.], device='npu:7'), tensor([4.], device='npu:7'), tensor([5.], device='npu:7'), tensor([6.], device='npu:7'), tensor([7.], device='npu:7')], z = tensor([0.], device='npu:7')
p-perf-huawei-06:3954290:3954290 [0] FLAGCX INFO Bootstrap : Using enp196s0f0:10.1.15.130<0>
rank 2 before reduce_scatter with FLAGCX_GROUP1: x_list = [tensor([0.], device='npu:2'), tensor([1.], device='npu:2'), tensor([2.], device='npu:2'), tensor([3.], device='npu:2'), tensor([4.], device='npu:2'), tensor([5.], device='npu:2'), tensor([6.], device='npu:2'), tensor([7.], device='npu:2')], z = tensor([0.], device='npu:2')
p-perf-huawei-06:3954285:3954285 [0] FLAGCX INFO Bootstrap : Using enp196s0f0:10.1.15.130<0>
rank 5 before reduce_scatter with FLAGCX_GROUP1: x_list = [tensor([0.], device='npu:5'), tensor([1.], device='npu:5'), tensor([2.], device='npu:5'), tensor([3.], device='npu:5'), tensor([4.], device='npu:5'), tensor([5.], device='npu:5'), tensor([6.], device='npu:5'), tensor([7.], device='npu:5')], z = tensor([0.], device='npu:5')
p-perf-huawei-06:3954288:3954288 [0] FLAGCX INFO Bootstrap : Using enp196s0f0:10.1.15.130<0>
rank 0 before reduce_scatter with FLAGCX_GROUP1: x_list = [tensor([0.], device='npu:0'), tensor([1.], device='npu:0'), tensor([2.], device='npu:0'), tensor([3.], device='npu:0'), tensor([4.], device='npu:0'), tensor([5.], device='npu:0'), tensor([6.], device='npu:0'), tensor([7.], device='npu:0')], z = tensor([0.], device='npu:0')
p-perf-huawei-06:3954283:3954283 [0] FLAGCX INFO Bootstrap : Using enp196s0f0:10.1.15.130<0>
p-perf-huawei-06:3954283:3955964 [0] FLAGCX INFO Bootstrap Root : rank 0 of 8 ranks checked in
p-perf-huawei-06:3954283:3955964 [0] FLAGCX INFO Bootstrap Root : rank 7 of 8 ranks checked in
p-perf-huawei-06:3954283:3955964 [0] FLAGCX INFO Bootstrap Root : rank 4 of 8 ranks checked in
p-perf-huawei-06:3954283:3955964 [0] FLAGCX INFO Bootstrap Root : rank 5 of 8 ranks checked in
p-perf-huawei-06:3954283:3955964 [0] FLAGCX INFO Bootstrap Root : rank 2 of 8 ranks checked in
rank 3 before reduce_scatter with FLAGCX_GROUP1: x_list = [tensor([0.], device='npu:3'), tensor([1.], device='npu:3'), tensor([2.], device='npu:3'), tensor([3.], device='npu:3'), tensor([4.], device='npu:3'), tensor([5.], device='npu:3'), tensor([6.], device='npu:3'), tensor([7.], device='npu:3')], z = tensor([0.], device='npu:3')
p-perf-huawei-06:3954286:3954286 [0] FLAGCX INFO Bootstrap : Using enp196s0f0:10.1.15.130<0>
p-perf-huawei-06:3954283:3955964 [0] FLAGCX INFO Bootstrap Root : rank 3 of 8 ranks checked in
rank 6 before reduce_scatter with FLAGCX_GROUP1: x_list = [tensor([0.], device='npu:6'), tensor([1.], device='npu:6'), tensor([2.], device='npu:6'), tensor([3.], device='npu:6'), tensor([4.], device='npu:6'), tensor([5.], device='npu:6'), tensor([6.], device='npu:6'), tensor([7.], device='npu:6')], z = tensor([0.], device='npu:6')
p-perf-huawei-06:3954289:3954289 [0] FLAGCX INFO Bootstrap : Using enp196s0f0:10.1.15.130<0>
p-perf-huawei-06:3954283:3955964 [0] FLAGCX INFO Bootstrap Root : rank 6 of 8 ranks checked in
rank 1 before reduce_scatter with FLAGCX_GROUP1: x_list = [tensor([0.], device='npu:1'), tensor([1.], device='npu:1'), tensor([2.], device='npu:1'), tensor([3.], device='npu:1'), tensor([4.], device='npu:1'), tensor([5.], device='npu:1'), tensor([6.], device='npu:1'), tensor([7.], device='npu:1')], z = tensor([0.], device='npu:1')
p-perf-huawei-06:3954284:3954284 [0] FLAGCX INFO Bootstrap : Using enp196s0f0:10.1.15.130<0>
p-perf-huawei-06:3954283:3955964 [0] FLAGCX INFO Bootstrap Root : rank 1 of 8 ranks checked in
p-perf-huawei-06:3954283:3955964 [0] FLAGCX INFO SENT OUT ALL 8 HANDLES
p-perf-huawei-06:3954290:3954290 [0] FLAGCX INFO rank 7 nranks 8 - DONE
p-perf-huawei-06:3954289:3954289 [0] FLAGCX INFO rank 6 nranks 8 - DONE
p-perf-huawei-06:3954283:3954283 [0] FLAGCX INFO rank 0 nranks 8 - DONE
p-perf-huawei-06:3954288:3954288 [0] FLAGCX INFO rank 5 nranks 8 - DONE
p-perf-huawei-06:3954287:3954287 [0] FLAGCX INFO rank 4 nranks 8 - DONE
p-perf-huawei-06:3954286:3954286 [0] FLAGCX INFO rank 3 nranks 8 - DONE
p-perf-huawei-06:3954285:3954285 [0] FLAGCX INFO rank 2 nranks 8 - DONE
p-perf-huawei-06:3954284:3954284 [0] FLAGCX INFO rank 1 nranks 8 - DONE
p-perf-huawei-06:3954283:3954283 [0] FLAGCX INFO rank = 0, nranks = 8, nclusters = 1, cluster_id = 0, cluster_size = 8, cluster_inter_rank = -1, homo_rank = 0, homo_root_rank = 0, homo_inter_rank = -1, homo_ranks = 8, has_single_rank_homo_comm = 0, 
p-perf-huawei-06:3954289:3954289 [0] FLAGCX INFO rank = 6, nranks = 8, nclusters = 1, cluster_id = 0, cluster_size = 8, cluster_inter_rank = -1, homo_rank = 6, homo_root_rank = 0, homo_inter_rank = -1, homo_ranks = 8, has_single_rank_homo_comm = 0, 
p-perf-huawei-06:3954284:3954284 [0] FLAGCX INFO rank = 1, nranks = 8, nclusters = 1, cluster_id = 0, cluster_size = 8, cluster_inter_rank = -1, homo_rank = 1, homo_root_rank = 0, homo_inter_rank = -1, homo_ranks = 8, has_single_rank_homo_comm = 0, 
p-perf-huawei-06:3954285:3954285 [0] FLAGCX INFO rank = 2, nranks = 8, nclusters = 1, cluster_id = 0, cluster_size = 8, cluster_inter_rank = -1, homo_rank = 2, homo_root_rank = 0, homo_inter_rank = -1, homo_ranks = 8, has_single_rank_homo_comm = 0, 
p-perf-huawei-06:3954288:3954288 [0] FLAGCX INFO rank = 5, nranks = 8, nclusters = 1, cluster_id = 0, cluster_size = 8, cluster_inter_rank = -1, homo_rank = 5, homo_root_rank = 0, homo_inter_rank = -1, homo_ranks = 8, has_single_rank_homo_comm = 0, 
p-perf-huawei-06:3954290:3954290 [0] FLAGCX INFO rank = 7, nranks = 8, nclusters = 1, cluster_id = 0, cluster_size = 8, cluster_inter_rank = -1, homo_rank = 7, homo_root_rank = 0, homo_inter_rank = -1, homo_ranks = 8, has_single_rank_homo_comm = 0, 
p-perf-huawei-06:3954287:3954287 [0] FLAGCX INFO rank = 4, nranks = 8, nclusters = 1, cluster_id = 0, cluster_size = 8, cluster_inter_rank = -1, homo_rank = 4, homo_root_rank = 0, homo_inter_rank = -1, homo_ranks = 8, has_single_rank_homo_comm = 0, 
p-perf-huawei-06:3954286:3954286 [0] FLAGCX INFO rank = 3, nranks = 8, nclusters = 1, cluster_id = 0, cluster_size = 8, cluster_inter_rank = -1, homo_rank = 3, homo_root_rank = 0, homo_inter_rank = -1, homo_ranks = 8, has_single_rank_homo_comm = 0, 
rank 6 after reduce_scatter with FLAGCX_GROUP1: x_list = [tensor([0.], device='npu:6'), tensor([1.], device='npu:6'), tensor([2.], device='npu:6'), tensor([3.], device='npu:6'), tensor([4.], device='npu:6'), tensor([5.], device='npu:6'), tensor([6.], device='npu:6'), tensor([7.], device='npu:6')], z = tensor([0.], device='npu:6')
rank 6 before _reduce_scatter_base with FLAGCX_GROUP1: x = tensor([6., 6., 6., 6., 6., 6., 6., 6.], device='npu:6'), z = tensor([0.], device='npu:6')
rank 6 after _reduce_scatter_base with FLAGCX_GROUP1: x = tensor([6., 6., 6., 6., 6., 6., 6., 6.], device='npu:6'), z = tensor([0.], device='npu:6')
rank 1 after reduce_scatter with FLAGCX_GROUP1: x_list = [tensor([0.], device='npu:1'), tensor([1.], device='npu:1'), tensor([2.], device='npu:1'), tensor([3.], device='npu:1'), tensor([4.], device='npu:1'), tensor([5.], device='npu:1'), tensor([6.], device='npu:1'), tensor([7.], device='npu:1')], z = tensor([0.], device='npu:1')
rank 1 before _reduce_scatter_base with FLAGCX_GROUP1: x = tensor([1., 1., 1., 1., 1., 1., 1., 1.], device='npu:1'), z = tensor([0.], device='npu:1')
rank 2 after reduce_scatter with FLAGCX_GROUP1: x_list = [tensor([0.], device='npu:2'), tensor([1.], device='npu:2'), tensor([2.], device='npu:2'), tensor([3.], device='npu:2'), tensor([4.], device='npu:2'), tensor([5.], device='npu:2'), tensor([6.], device='npu:2'), tensor([7.], device='npu:2')], z = tensor([0.], device='npu:2')
rank 1 after _reduce_scatter_base with FLAGCX_GROUP1: x = tensor([1., 1., 1., 1., 1., 1., 1., 1.], device='npu:1'), z = tensor([0.], device='npu:1')
rank 6 before reduce_scatter_coalesced sync with FLAGCX_GROUP1: x = tensor([0.7044, 0.9001, 0.0207, 0.4605, 0.1970, 0.3769, 0.6769, 0.7139],
       device='npu:6'), y = tensor([0.7453, 0.2229, 0.1103, 0.4110, 0.0512, 0.1318, 0.4713, 0.8736],
       device='npu:6'), z=tensor([0.], device='npu:6'), z1=tensor([0.], device='npu:6')
rank 2 before _reduce_scatter_base with FLAGCX_GROUP1: x = tensor([2., 2., 2., 2., 2., 2., 2., 2.], device='npu:2'), z = tensor([0.], device='npu:2')
rank 5 after reduce_scatter with FLAGCX_GROUP1: x_list = [tensor([0.], device='npu:5'), tensor([1.], device='npu:5'), tensor([2.], device='npu:5'), tensor([3.], device='npu:5'), tensor([4.], device='npu:5'), tensor([5.], device='npu:5'), tensor([6.], device='npu:5'), tensor([7.], device='npu:5')], z = tensor([0.], device='npu:5')
rank 2 after _reduce_scatter_base with FLAGCX_GROUP1: x = tensor([2., 2., 2., 2., 2., 2., 2., 2.], device='npu:2'), z = tensor([0.], device='npu:2')
rank 5 before _reduce_scatter_base with FLAGCX_GROUP1: x = tensor([5., 5., 5., 5., 5., 5., 5., 5.], device='npu:5'), z = tensor([0.], device='npu:5')
rank 1 before reduce_scatter_coalesced sync with FLAGCX_GROUP1: x = tensor([0.4112, 0.0769, 0.6220, 0.4287, 0.0437, 0.2143, 0.2384, 0.3793],
       device='npu:1'), y = tensor([0.5404, 0.8509, 0.6794, 0.2908, 0.1646, 0.8947, 0.4371, 0.0186],
       device='npu:1'), z=tensor([0.], device='npu:1'), z1=tensor([0.], device='npu:1')
rank 5 after _reduce_scatter_base with FLAGCX_GROUP1: x = tensor([5., 5., 5., 5., 5., 5., 5., 5.], device='npu:5'), z = tensor([0.], device='npu:5')
rank 2 before reduce_scatter_coalesced sync with FLAGCX_GROUP1: x = tensor([0.2810, 0.8775, 0.6015, 0.7240, 0.8767, 0.9967, 0.6455, 0.8620],
       device='npu:2'), y = tensor([0.9101, 0.3532, 0.8024, 0.0922, 0.6395, 0.6959, 0.3927, 0.2676],
       device='npu:2'), z=tensor([0.], device='npu:2'), z1=tensor([0.], device='npu:2')
rank 5 before reduce_scatter_coalesced sync with FLAGCX_GROUP1: x = tensor([0.1465, 0.9618, 0.1351, 0.0524, 0.2130, 0.4504, 0.5813, 0.2969],
       device='npu:5'), y = tensor([0.5264, 0.8015, 0.9711, 0.2735, 0.6019, 0.3921, 0.4992, 0.0073],
       device='npu:5'), z=tensor([0.], device='npu:5'), z1=tensor([0.], device='npu:5')
rank 3 after reduce_scatter with FLAGCX_GROUP1: x_list = [tensor([0.], device='npu:3'), tensor([1.], device='npu:3'), tensor([2.], device='npu:3'), tensor([3.], device='npu:3'), tensor([4.], device='npu:3'), tensor([5.], device='npu:3'), tensor([6.], device='npu:3'), tensor([7.], device='npu:3')], z = tensor([27.], device='npu:3')
rank 4 after reduce_scatter with FLAGCX_GROUP1: x_list = [tensor([0.], device='npu:4'), tensor([1.], device='npu:4'), tensor([2.], device='npu:4'), tensor([3.], device='npu:4'), tensor([4.], device='npu:4'), tensor([5.], device='npu:4'), tensor([6.], device='npu:4'), tensor([7.], device='npu:4')], z = tensor([29.], device='npu:4')
rank 3 before _reduce_scatter_base with FLAGCX_GROUP1: x = tensor([3., 3., 3., 3., 3., 3., 3., 3.], device='npu:3'), z = tensor([27.], device='npu:3')
rank 7 after reduce_scatter with FLAGCX_GROUP1: x_list = [tensor([0.], device='npu:7'), tensor([1.], device='npu:7'), tensor([2.], device='npu:7'), tensor([3.], device='npu:7'), tensor([4.], device='npu:7'), tensor([5.], device='npu:7'), tensor([6.], device='npu:7'), tensor([7.], device='npu:7')], z = tensor([50.], device='npu:7')
rank 0 after reduce_scatter with FLAGCX_GROUP1: x_list = [tensor([0.], device='npu:0'), tensor([1.], device='npu:0'), tensor([2.], device='npu:0'), tensor([3.], device='npu:0'), tensor([4.], device='npu:0'), tensor([5.], device='npu:0'), tensor([6.], device='npu:0'), tensor([7.], device='npu:0')], z = tensor([6.0000], device='npu:0')
rank 4 before _reduce_scatter_base with FLAGCX_GROUP1: x = tensor([4., 4., 4., 4., 4., 4., 4., 4.], device='npu:4'), z = tensor([29.], device='npu:4')
rank 0 before _reduce_scatter_base with FLAGCX_GROUP1: x = tensor([0., 0., 0., 0., 0., 0., 0., 0.], device='npu:0'), z = tensor([6.0000], device='npu:0')
rank 3 after _reduce_scatter_base with FLAGCX_GROUP1: x = tensor([3., 3., 3., 3., 3., 3., 3., 3.], device='npu:3'), z = tensor([27.], device='npu:3')
rank 7 before _reduce_scatter_base with FLAGCX_GROUP1: x = tensor([7., 7., 7., 7., 7., 7., 7., 7.], device='npu:7'), z = tensor([50.], device='npu:7')
rank 0 after _reduce_scatter_base with FLAGCX_GROUP1: x = tensor([0., 0., 0., 0., 0., 0., 0., 0.], device='npu:0'), z = tensor([6.0000], device='npu:0')
rank 4 after _reduce_scatter_base with FLAGCX_GROUP1: x = tensor([4., 4., 4., 4., 4., 4., 4., 4.], device='npu:4'), z = tensor([29.], device='npu:4')
rank 7 after _reduce_scatter_base with FLAGCX_GROUP1: x = tensor([7., 7., 7., 7., 7., 7., 7., 7.], device='npu:7'), z = tensor([7.], device='npu:7')
rank 0 before reduce_scatter_coalesced sync with FLAGCX_GROUP1: x = tensor([0.1654, 0.3478, 0.3057, 0.1363, 0.5509, 0.4729, 0.5880, 0.9922],
       device='npu:0'), y = tensor([0.7271, 0.8393, 0.6219, 0.1236, 0.2006, 0.2976, 0.8759, 0.5519],
       device='npu:0'), z=tensor([7.], device='npu:0'), z1=tensor([0.], device='npu:0')
rank 3 before reduce_scatter_coalesced sync with FLAGCX_GROUP1: x = tensor([0.5256, 0.7930, 0.2322, 0.2408, 0.4296, 0.4330, 0.5987, 0.3094],
       device='npu:3'), y = tensor([0.4529, 0.6303, 0.9450, 0.5723, 0.3157, 0.0272, 0.4055, 0.7703],
       device='npu:3'), z=tensor([7.], device='npu:3'), z1=tensor([0.], device='npu:3')
rank 4 before reduce_scatter_coalesced sync with FLAGCX_GROUP1: x = tensor([0.7657, 0.2066, 0.9499, 0.6531, 0.4379, 0.1534, 0.6506, 0.7997],
       device='npu:4'), y = tensor([0.7363, 0.1001, 0.9966, 0.8282, 0.3390, 0.5672, 0.6859, 0.3537],
       device='npu:4'), z=tensor([7.], device='npu:4'), z1=tensor([0.], device='npu:4')
rank 7 before reduce_scatter_coalesced sync with FLAGCX_GROUP1: x = tensor([0.8860, 0.6090, 0.4288, 0.3837, 0.8159, 0.8866, 0.9257, 0.2574],
       device='npu:7'), y = tensor([0.6472, 0.9158, 0.0875, 0.7461, 0.4734, 0.9178, 0.0575, 0.7049],
       device='npu:7'), z=tensor([0.], device='npu:7'), z1=tensor([0.], device='npu:7')
[ERROR] 2025-07-08-11:33:07 (PID:3954215, Device:-1, RankID:-1) ERR99999 UNKNOWN applicaiton exception
